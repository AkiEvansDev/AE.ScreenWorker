<Window 
    x:Class="TimersWPF.Timers"
    x:Name="Window"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.modernwpf.com/2019"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:common="clr-namespace:ScreenWorkerWPF.Common;assembly=ScreenWorker"
    mc:Ignorable="d"
    AllowsTransparency="True"
    WindowStyle="None"
    ui:WindowHelper.UseModernWindowStyle="True"
    ui:TitleBar.ExtendViewIntoTitleBar="True"
    Icon="t.ico"
    Title="Timers" 
    ResizeMode="CanResize"
    WindowStartupLocation="CenterScreen"
    Height="450" Width="380"
    MinHeight="450" MinWidth="380"
    BorderThickness="0"
    BorderBrush="Transparent"
    Background="Transparent"
    FocusVisualStyle="{x:Null}">
    <Window.Resources>
        <ResourceDictionary>

            <common:PixelsToGridLengthConverter x:Key="PixelsToGridLength"/>
            <BooleanToVisibilityConverter x:Key="VisibilityConverter"  />
            
            <DataTemplate x:Key="TimerItem">
                <ui:SimpleStackPanel>
                    <Grid
                        x:Name="Item"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Button
                            Padding="6 3"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:FlyoutService.Flyout>
                                <ui:Flyout
                                    Placement="BottomEdgeAlignedLeft">
                                    <ui:SimpleStackPanel>
                                        <ui:NumberBox
                                            Value="{Binding Hours}"
                                            SpinButtonPlacementMode="Inline"
                                            ui:ControlHelper.Header="Hours"
                                            FocusVisualStyle="{x:Null}"/>
                                        <ui:NumberBox
                                            Value="{Binding Minutes}"
                                            SpinButtonPlacementMode="Inline"
                                            ui:ControlHelper.Header="Minutes"
                                            FocusVisualStyle="{x:Null}"/>
                                        <ui:NumberBox
                                            Value="{Binding Seconds}"
                                            SpinButtonPlacementMode="Inline"
                                            ui:ControlHelper.Header="Seconds"
                                            FocusVisualStyle="{x:Null}"/>
                                    </ui:SimpleStackPanel>
                                </ui:Flyout>
                            </ui:FlyoutService.Flyout>
                            <TextBlock 
                                Text="{Binding DisplayTime}"
                                FontSize="16"
                                FontWeight="Bold"
                                VerticalAlignment="Center"/>
                        </Button>
                        <TextBox
                            Grid.Column="1"
                            Text="{Binding Name}"
                            FontSize="14"
                            FontWeight="Medium"
                            VerticalAlignment="Center"
                            Margin="2 2 7 0"
                            TextWrapping="NoWrap"
                            BorderThickness="0"
                            BorderBrush="Transparent"
                            Background="#00000000"
                            ui:TextBoxHelper.IsDeleteButtonVisible="False"
                            ui:ControlHelper.PlaceholderText="Name"
                            ui:ControlHelper.PlaceholderForeground="{DynamicResource TextControlPlaceholderForegroundFocused}"
                            FocusVisualStyle="{x:Null}"/>
                        <Button
                            Grid.Column="2"
                            Padding="3 6"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:FlyoutService.Flyout>
                                <ui:Flyout
                                    Placement="BottomEdgeAlignedRight">
                                    <ui:SimpleStackPanel>
                                        <CheckBox
                                            IsChecked="{Binding Notify}"
                                            Content="Notification"
                                            FontWeight="SemiBold"
                                            FocusVisualStyle="{x:Null}">
                                            <CheckBox.RenderTransform>
                                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                            </CheckBox.RenderTransform>
                                        </CheckBox>
                                        <CheckBox
                                            IsChecked="{Binding NotifyDiscord}"
                                            Content="Discord notification"
                                            FontWeight="SemiBold"
                                            FocusVisualStyle="{x:Null}">
                                            <CheckBox.RenderTransform>
                                                <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                            </CheckBox.RenderTransform>
                                        </CheckBox>
                                        <ui:NumberBox
                                            Value="{Binding NotifyHours}"
                                            SpinButtonPlacementMode="Inline"
                                            ui:ControlHelper.Header="Hours"
                                            FocusVisualStyle="{x:Null}"/>
                                        <ui:NumberBox
                                            Value="{Binding NotifyMinutes}"
                                            SpinButtonPlacementMode="Inline"
                                            ui:ControlHelper.Header="Minutes"
                                            FocusVisualStyle="{x:Null}"/>
                                        <ui:NumberBox
                                            Value="{Binding NotifySeconds}"
                                            SpinButtonPlacementMode="Inline"
                                            ui:ControlHelper.Header="Seconds"
                                            FocusVisualStyle="{x:Null}"/>
                                    </ui:SimpleStackPanel>
                                </ui:Flyout>
                            </ui:FlyoutService.Flyout>
                            <ui:SymbolIcon
                                x:Name="Clock"
                                FontSize="16"
                                Symbol="Clock"/>
                        </Button>
                        <Button
                            Grid.Column="3"
                            Command="{Binding Start}"
                            Visibility="{Binding IsNotWork, Converter={StaticResource VisibilityConverter}}"
                            Padding="3 6"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:SymbolIcon
                                FontSize="16"
                                Symbol="Play"/>
                        </Button>
                        <Button
                            Grid.Column="3"
                            Command="{Binding Stop}"
                            Visibility="{Binding IsWork, Converter={StaticResource VisibilityConverter}}"
                            Padding="3 6"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:SymbolIcon
                                FontSize="14"
                                Symbol="Stop"/>
                        </Button>
                        <Button
                            Grid.Column="4"
                            Command="{Binding Reset}"
                            Padding="3 6"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:SymbolIcon
                                FontSize="14"
                                Symbol="Refresh"/>
                        </Button>
                        <Button
                            Grid.Column="5"
                            Command="{Binding Up}"
                            Padding="3 6"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:SymbolIcon
                                FontSize="14"
                                Symbol="Upload"/>
                        </Button>
                        <Button
                            Grid.Column="6"
                            Command="{Binding Down}"
                            Padding="3 6"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            FocusVisualStyle="{x:Null}">
                            <Button.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                                    <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                                </ResourceDictionary>
                            </Button.Resources>
                            <ui:SymbolIcon
                                FontSize="14"
                                Symbol="Download"/>
                        </Button>
                        <Border
                            Grid.ColumnSpan="8"
                            BorderBrush="{DynamicResource NavigationViewItemSeparatorForeground}"
                            BorderThickness="0 1 0 0"
                            VerticalAlignment="Bottom" 
                            HorizontalAlignment="Stretch" 
                            Margin="0 -3 0 0"
                            Opacity="0.8"/>
                    </Grid>
                </ui:SimpleStackPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding Notify}" Value="True">
                        <Setter TargetName="Clock" Property="Foreground" Value="{DynamicResource CheckBoxCheckBackgroundFillChecked}"/>
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            
        </ResourceDictionary>
    </Window.Resources>
    <Border
        x:Name="Border"
        CornerRadius="6"
        BorderThickness="1"
        BorderBrush="{DynamicResource NavigationViewItemSeparatorForeground}"
        Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding ElementName=Window, Path=(ui:TitleBar.SystemOverlayLeftInset), Converter={StaticResource PixelsToGridLength}}" />
                <ColumnDefinition />
                <ColumnDefinition Width="{Binding ElementName=Window, Path=(ui:TitleBar.SystemOverlayRightInset), Converter={StaticResource PixelsToGridLength}}" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding ElementName=Window, Path=(ui:TitleBar.Height), Converter={StaticResource PixelsToGridLength}}"/>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid
                Grid.ColumnSpan="3">
                <TextBlock
                    Text="{Binding ElementName=Window, Path=Title}"
                    Margin="12 0 0 0"
                    FontSize="12"
                    FontWeight="Bold"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center" />
            </Grid>
            <ScrollViewer
                x:Name="Scroll"
                Grid.Row="1"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Margin="6 0 0 0"
                AllowDrop="True">
                <ItemsControl
                    ItemsSource="{Binding Timers}"
                    ItemTemplate="{StaticResource TimerItem}"
                    Margin="6 6 12 6"
                    FocusVisualStyle="{x:Null}">
                    <ItemsControl.Resources>
                        <ResourceDictionary>
                            <Thickness x:Key="TextControlBorderThemeThicknessFocused">0</Thickness>
                        </ResourceDictionary>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ui:SimpleStackPanel 
                            Spacing="0"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
            <ContentControl 
                x:Name="VisualDrag"
                Grid.Row="1"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Background="{DynamicResource SystemControlBackgroundChromeMediumBrush}"
                ContentTemplate="{StaticResource TimerItem}"
                Opacity="0.9"
                Margin="12 0 12 0"
                VerticalAlignment="Top"
                Visibility="Collapsed"/>
            <Grid
                Grid.Row="2"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Margin="12 6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Button
                    Grid.Column="0"
                    Padding="6"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    FocusVisualStyle="{x:Null}">
                    <Button.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                        </ResourceDictionary>
                    </Button.Resources>
                    <ui:FlyoutService.Flyout>
                        <ui:Flyout
                            Placement="TopEdgeAlignedLeft">
                            <ui:SimpleStackPanel>
                                <CheckBox
                                    x:Name="TopmostCheckBox"
                                    Content="Topmost"
                                    FontWeight="SemiBold"
                                    FocusVisualStyle="{x:Null}"
                                    Checked="OnTopmost"
                                    Unchecked="OnTopmost">
                                    <CheckBox.RenderTransform>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                    </CheckBox.RenderTransform>
                                </CheckBox>
                                <TextBlock Text="Opacity"/>
                                <Slider 
                                    x:Name="OpacitySlider"
                                    Margin="0 -6 0 0"
                                    Minimum="20" 
                                    Maximum="100"
                                    ValueChanged="OnOpacityValueChanged"/>
                            </ui:SimpleStackPanel>
                        </ui:Flyout>
                    </ui:FlyoutService.Flyout>
                    <ui:SymbolIcon
                        FontSize="16"
                        Symbol="Setting"/>
                </Button>
                <Button
                    Grid.Column="1"
                    Padding="6"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    FocusVisualStyle="{x:Null}">
                    <Button.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                        </ResourceDictionary>
                    </Button.Resources>
                    <ui:FlyoutService.Flyout>
                        <ui:Flyout
                            Placement="TopEdgeAlignedLeft">
                            <ui:SimpleStackPanel
                                Spacing="6">
                                <TextBox
                                    x:Name="Token"
                                    Width="250"
                                    MaxWidth="250"
                                    ui:ControlHelper.Header="Discord BOT"
                                    ui:ControlHelper.PlaceholderText="Token"
                                    FocusVisualStyle="{x:Null}"
                                    TextChanged="OnTokenTextChanged"/>
                                <TextBox
                                    x:Name="Channel"
                                    Width="250"
                                    MaxWidth="250"
                                    ui:ControlHelper.Header="Channel Id"
                                    ui:ControlHelper.PlaceholderText="Id"
                                    FocusVisualStyle="{x:Null}"
                                    TextChanged="OnChannelChanged"/>
                                <TextBox
                                    x:Name="Role"
                                    Width="250"
                                    MaxWidth="250"
                                    ui:ControlHelper.Header="Role Id"
                                    ui:ControlHelper.PlaceholderText="Id"
                                    FocusVisualStyle="{x:Null}"
                                    TextChanged="OnRoleTextChanged"/>
                                <TextBox
                                    x:Name="HellowMessage"
                                    Width="250"
                                    MaxWidth="250"
                                    ui:ControlHelper.Header="Message"
                                    ui:ControlHelper.PlaceholderText="Message"
                                    FocusVisualStyle="{x:Null}"
                                    TextChanged="OnMessageTextChanged"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="6"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="6"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Button
                                        Grid.Column="0"
                                        HorizontalAlignment="Stretch"
                                        Content="Start"
                                        FocusVisualStyle="{x:Null}"
                                        Click="SendStartClick"/>
                                    <Button
                                        Grid.Column="2"
                                        HorizontalAlignment="Stretch"
                                        Content="Wait"
                                        FocusVisualStyle="{x:Null}"
                                        Click="SendWaitClick"/>
                                    <Button
                                        Grid.Column="4"
                                        HorizontalAlignment="Stretch"
                                        Content="Send"
                                        FocusVisualStyle="{x:Null}"
                                        Click="SendClick"/>
                                </Grid>
                            </ui:SimpleStackPanel>
                        </ui:Flyout>
                    </ui:FlyoutService.Flyout>
                    <ui:SymbolIcon
                        FontSize="16"
                        Symbol="People"/>
                </Button>
                <Button
                    Grid.Column="3"
                    Command="{Binding Add}"
                    Padding="6"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    FocusVisualStyle="{x:Null}">
                    <Button.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                        </ResourceDictionary>
                    </Button.Resources>
                    <ui:SymbolIcon
                        FontSize="16"
                        Symbol="Add"/>
                </Button>
                <Button
                    Grid.Column="4"
                    Command="{Binding Delete}"
                    Padding="6"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    FocusVisualStyle="{x:Null}">
                    <Button.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="Transparent"/>
                            <SolidColorBrush x:Key="ButtonBorderBrushDisabled" Color="Transparent"/>
                        </ResourceDictionary>
                    </Button.Resources>
                    <ui:SymbolIcon
                        Foreground="{DynamicResource SystemControlErrorTextForegroundBrush}"
                        FontSize="16"
                        Symbol="Delete"/>
                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>
